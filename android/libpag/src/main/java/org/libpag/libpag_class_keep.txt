org.libpag.PAGComposition {
    //All native method need to keep
}

org.libpag.PAGFile {
    // Filed:
    long nativeContext = 0;

    // API Override
     protected void finalize();

    //All native method need to keep
}

org.libpag.PAGFont {
    // native Methoad:
    public static native PAGFont RegisterFont(AssetManager manager, String fileName, int ttcIndex);
    public static native PAGFont RegisterFont(String fontPath, int ttcIndex);
    private static native PAGFont RegisterFontBytes(byte[] bytes, int length, int ttcIndex);
    private static native void SetFallbackFontPaths(String[] fontNameList, int[] ttcIndices);
}

org.libpag.PAGImage {
    // Filed:
    long nativeContext = 0; 

    // API Override
    protected void finalize(); 

    // native Methoad:
    private native final void nativeRelease();
    private static native final void nativeInit();
    private static native long LoadFromPixels(byte[] pixels, int width, int height,int rowBytes, int colorType, int alphaType);
    private static native long LoadFromPath(String path);
    private static native long LoadFromBytes(byte[] bytes, int length);
    private static native long LoadFromAssets(AssetManager manager, String fileName);
    private static native long LoadFromTexture(int textureID, int textureType,
                                               int width, int height);
    public native int width();
    public native int height();
    public native int scaleMode();
    public native void setScaleMode(int mode);
    private native void nativeGetMatrix(float[] values);
    private native void nativeSetMatrix(float a, float b, float c,
                                        float d, float tx, float ty);
}

org.libpag.PAGLayer {
    // Filed:
    protected long nativeContext; 

    // API Override
    protected void finalize();
    public boolean equals(Object obj)
    public int hashCode()

    //All native method need to keep
}

org.libpag.PAGSurface {
    // Filed:
    long nativeSurface = 0;

    // API Override
    protected void finalize();

    // native Methoad:

    //All native method need to keep
}

org.libpag.VideoDecoder {
    public static native void RegisterSoftwareDecoderFactory(long factory);
    public static native void SetMaxHardwareDecoderCount(int maxCount);
}

org.libpag.VideoSurface {
    // API Override
    public void onFrameAvailable(SurfaceTexture st);

    // keep method
    private static VideoSurface Make();
    private Surface getOutputSurface();
    private boolean updateTexImage();
    private boolean attachToGLContext(int texName);
    private int videoWidth();
    private int videoHeight();
    private void onRelease();
}

org.libpag.GPUDecoder extends org.libpag.VideoDecoder{
    // inner class
    private static class OutputFrame {
        public long[] data;
        public int[] lineSize;
    }

    // API Override
    public void onFrameAvailable(SurfaceTexture st);

    // keep method
    private static GPUDecoder Create(Surface outputSurface);
    private boolean onConfigure(MediaFormat mediaFormat);
    private int onSendBytes(ByteBuffer bytes, long frame);
    private int onEndOfStream();
    private int onDecodeFrame();
    private void onFlush();
    private long presentationTime();
    private OutputFrame onRenderFrame();
    private void onRelease();
}

org.libpag.PAGView {
    // API Override
    public void setSurfaceTextureListener(SurfaceTextureListener listener);
    public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height);
    public void onSurfaceTextureSizeChanged(SurfaceTexture surfaceTexture, int width, int height);
    public boolean onSurfaceTextureDestroyed(SurfaceTexture surface);
    public void onAttachedToWindow();
    protected void onDetachedFromWindow();
    public void onSurfaceTextureUpdated(SurfaceTexture surface);
}

org.libpag.PAGText {

    // 默认构造方法：
    public PAGText() ; 

    // PAGText字段
    public boolean applyFill;

    public boolean applyStroke;

    public float baselineShift;

    public boolean boxText;

    public RectF boxTextRect;

    public float firstBaseLine;

    public boolean fauxBold;

    public boolean fauxItalic;

    public int fillColor;

    public String fontFamily;

    public String fontStyle;

    public float fontSize;

    public int strokeColor;

    public boolean strokeOverFill;

    public float strokeWidth;

    public String text;

    public int justification;

    public float leading;

    public float tracking;
    //All native method need to keep
}

org.libpag.PAGVideoRange {
    // <init>
    public PAGVideoRange(long startTime, long endTime, long playDuration, boolean reversed)
}

org.libpag.PAGMarker {
    // <init>
    public PAGMarker(long startTime, long duration, String comment);
}

org.libpag.PAGImagerLayer extends PAGLayer {
    // <init>
    public PAGImageLayer(long nativeContext);
    //All native method need to keep
}

org.libpag.PAGTextLayer extends PAGLayer {
    public PAGTextLayer(long nativeContext)
    //All native method need to keep
}

org.libpag.PAGSolidLayer extends PAGLayer {
    public PAGSolidLayer(long nativeContext)
    //All native method need to keep
}

org.libpag.PAGShapeLayer extends PAGLayer {
    public PAGSolidLayer(long nativeContext)
    //All native method need to keep
}

org.libpag.TraceImage {
    public static void Trace(String tag, ByteBuffer byteBuffer, int width, int height);
}