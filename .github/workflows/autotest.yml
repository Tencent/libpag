# This is a basic workflow to help you get started with Actions

name: autotest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  autotest:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
      - name: Get environment cache
        id: cache-environment
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/Cellar/ninja
            /usr/local/bin/ninja
            /usr/local/Cellar/node
            /usr/local/bin/node
            /usr/local/Cellar/emscripten
            /usr/local/bin/em++
            /usr/local/bin/em-config
            /usr/local/bin/emar
            /usr/local/bin/emcc
            /usr/local/bin/emcmake
            /usr/local/bin/emconfigure
            /usr/local/bin/emlink.py
            /usr/local/bin/emmake
            /usr/local/bin/emranlib
            /usr/local/bin/emrun
            /usr/local/bin/emscons
            /usr/local/Cellar/yasm
            /usr/local/bin/yasm
            /usr/local/bin/depsync
            /usr/local/lib/node_modules/depsync
            /usr/local/Cellar/gcovr
            /usr/local/bin/gcovr
          key: libpag-environment-autotest-20220402
          restore-keys: |
            libpag-environment-
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - name: Get thirdParty cache
        id: cache-thirdParty
        uses: actions/cache@v2
        with:
          path: |
            third_party
            vendor_tools
            test/baseline/.cache
          key: third_party-autotest-01-${{ hashFiles('DEPS') }}-${{ hashFiles('vendor.json') }}-${{ hashFiles('test/baseline/version.json') }}
          restore-keys: third_party-autotest-
      - name: Run sync_deps script
        run: |
          chmod +x sync_deps.sh
          ./sync_deps.sh
        shell: bash

      - if: github.event_name == 'push'
        name: Build cache（push）
        run: |
          node build_vendor -p mac
          if [ ! $(which gcovr) ]; then
            brew install gcovr
          fi
          chmod +x update_baseline.sh
          ./update_baseline.sh 1
          mkdir result
          cp -r test/baseline result

      - if: github.event_name == 'pull_request'
        name: Run autotest script
        run: |
          chmod +x autotest.sh
          ./autotest.sh

      - name: codecov
        if: github.event_name == 'pull_request'
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: libpag/result/coverage.xml
      - name: The job has failed
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: result
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: result
